{"version":3,"sources":["redux/phoneBook/reducer.js","redux/phoneBook/selectors.js","components/Contacts/index.jsx","components/ContactItem/index.jsx","components/ContactList/index.jsx","App.js","redux/phoneBook/operations.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["createSlice","name","initialState","contacts","items","filter","reducers","onSave","state","action","payload","onDelete","id","onUpdate","actions","reducer","getContacts","phoneBook","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","number","Contacts","alert","useAlert","dispatch","useDispatch","useState","setState","useSelector","handleChange","e","prevState","target","value","onSubmit","preventDefault","newItem","uuidv4","Number","some","contact","show","type","onChange","pattern","title","required","useStyles","createUseStyles","item","display","marginBottom","alignItems","ContactItem","contactID","classes","find","getContact","className","onClick","list","listStyle","margin","padding","ContactList","visibleContacts","map","App","useEffect","getState","fetch","then","resp","json","data","combineReducers","enhancers","applyMiddleware","store","next","console","group","info","groupEnd","composedEnhancer","composeWithDevTools","createStore","rootReducer","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","Root","template","AlertTemplate","render","document","getElementById"],"mappings":"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","file":"static/js/main.422c1d2e.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  contacts: {\r\n    items: [],\r\n    filter: \"\",\r\n  },\r\n};\r\n\r\nconst { actions, reducer } = createSlice({\r\n  name: \"phoneBook/toolkit/slice\",\r\n  initialState,\r\n  reducers: {\r\n    onSave: (state, action) => {\r\n      state.contacts.items = [...state.contacts.items, action.payload];\r\n    },\r\n    onDelete: (state, action) => {\r\n      state.contacts.items = [\r\n        ...state.contacts.items.filter(({ id }) => action.payload !== id),\r\n      ];\r\n    },\r\n    onUpdate: (state, action) => {\r\n      state.contacts.filter = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { onSave, onDelete, onUpdate } = actions;\r\n\r\nexport default reducer;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.phoneBook.contacts.items;\r\nexport const getFilter = (state) => state.phoneBook.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport const getContact = (contactID) => (state) =>\r\n  state.phoneBook.contacts.items.find((item) => item.id === contactID);\r\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { onSave } from \"../../redux/phoneBook/reducer\";\r\nimport { getContacts } from \"../../redux/phoneBook/selectors\";\r\n\r\nconst initialState = {\r\n  id: \"\",\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nconst Contacts = () => {\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n\r\n  const [state, setState] = useState(initialState);\r\n  const { name, number } = state;\r\n\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleSaveItem = (item) => dispatch(onSave(item));\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newItem = {\r\n      id: uuidv4(), // uuid\r\n      name,\r\n      number: Number(number),\r\n    };\r\n\r\n    if (contacts.some((contact) => contact.name === newItem.name)) {\r\n      alert.show(`Contact is already in contscts.`);\r\n      return;\r\n    }\r\n\r\n    handleSaveItem(newItem);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <span>Name:</span>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            name=\"number\"\r\n            onChange={handleChange}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">+ Add</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import { createUseStyles } from \"react-jss\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { onDelete } from \"../../redux/phoneBook/reducer\";\r\nimport { getContact } from \"../../redux/phoneBook/selectors\";\r\n\r\nconst useStyles = createUseStyles({\r\n  item: {\r\n    display: \"flex\",\r\n    marginBottom: 10,\r\n    alignItems: \"flex-start\",\r\n  },\r\n});\r\n\r\nconst ContactItem = ({ contactID }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const contact = useSelector(getContact(contactID)); //from redux\r\n  const { name, id, number } = contact;\r\n\r\n  const handleDeleteItem = () => dispatch(onDelete(id));\r\n\r\n  return (\r\n    <li key={id} className={classes.item}>\r\n      {name}\r\n      {number}\r\n      <button id={id} type=\"button\" onClick={handleDeleteItem}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import { createUseStyles } from \"react-jss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ContactItem from \"../ContactItem\";\r\nimport { getVisibleContacts } from \"../../redux/phoneBook/selectors\";\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nconst ContactList = () => {\r\n  const classes = useStyles();\r\n\r\n  const visibleContacts = useSelector(getVisibleContacts); //from redux\r\n\r\n  return (\r\n    <ul className={classes.list}>\r\n      {visibleContacts.map((contact) => (\r\n        <ContactItem contactID={contact.id} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import \"./App.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Contacts from \"./components/Contacts\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport { onUpdate } from \"./redux/phoneBook/reducer\";\r\nimport { getFilter } from \"./redux/phoneBook/selectors\";\r\nimport { getContacts } from \"./redux/phoneBook/operations\";\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, []);\r\n\r\n  const filter = useSelector(getFilter); //from redux\r\n\r\n  const handleFilter = (filterText) => dispatch(onUpdate(filterText));\r\n\r\n  const handleChange = (e) => {\r\n    const filter = e.target.value;\r\n\r\n    handleFilter(filter);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span>Find:</span>\r\n      <input type=\"text\" value={filter} name=\"filter\" onChange={handleChange} />\r\n\r\n      <Contacts />\r\n\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const getContacts = () => (dispatch, getState) => {\r\n  fetch(\"http://localhost:4040/contacts\")\r\n    .then((resp) => resp.json())\r\n    .then((data) => dispatch());\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport phoneBook from \"./phoneBook/reducer\";\r\n\r\nexport default combineReducers({ phoneBook });\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst loggerMiddleware = (store) => (next) => (action) => {\r\n  console.group(action.type);\r\n  console.info(\"dispatching\", action);\r\n  console.groupEnd(action.type);\r\n\r\n  return next(action);\r\n};\r\n\r\n// const thunk = ({ dispatch, getState }) => (next) => (action) =>\r\n//   typeof action === \"function\" ? action(dispatch, getState) : next(action);\r\n\r\n// const enhancers = [applyMiddleware(loggerMiddleware), applyMiddleware(thunk)];\r\nconst enhancers = [applyMiddleware(loggerMiddleware)];\r\nconst composedEnhancer = composeWithDevTools(...enhancers);\r\n\r\nexport const store = createStore(rootReducer, composedEnhancer);\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\r\nimport AlertTemplate from \"react-alert-template-basic\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/store\";\r\n\r\n// optional configuration\r\nconst options = {\r\n  // you can also just use 'bottom center'\r\n  position: positions.BOTTOM_CENTER,\r\n  timeout: 5000,\r\n  offset: \"30px\",\r\n  // you can also just use 'scale'\r\n  transition: transitions.SCALE,\r\n};\r\n\r\nconst Root = () => (\r\n  <AlertProvider template={AlertTemplate} {...options}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </AlertProvider>\r\n);\r\n\r\nrender(<Root />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}